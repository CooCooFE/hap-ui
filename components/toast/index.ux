<template>
  <div show="{{isShowLoading}}" class="ux-loading {{loadingConfig.mask==true? 'ux-showMask': ''}}">
    <div class="loading-content">
      <div class="img-content">
        <img class="img" src="{{loadingConfig.image}}" alt=""/>
      </div>
      <text class="title">{{loadingConfig.title}}</text>
    </div>
  </div>
</template>

<style lang="less">
  .ux-loading {
    position: fixed;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    .loading-content {
      background-color: #6b6b6b;
      opacity: 0.8;
      flex-direction: column;
      width: 200px;
      padding: 20px;
      border-radius: 10px;
      justify-content: center;
      align-items: center;
      .img {
        margin-top: 20px;
        width: 100px;
        height: 100px;
      }
      .title {
        color: #ffffff;
        margin-top: 20px;
      }
    }
  }
  .ux-showMask {
    background-color: #3c3a3a;
    opacity: 0.8;
  }
</style>

<script>
  const hot = 'https://s1.ax1x.com/2018/11/14/ijMrsP.png'
  import prompt from '@system.prompt'
  export default {
    data: {
      isShowLoading: false,
      loadingConfig: {
        title: '自定义组件',
        image: hot,
        mask: false,
        duration: 1000
      },
      copyConfig: {}
    },
    onInit () {
      // 备份原始数据,放置数据更新时混淆
      this.copyConfig = Object.assign({}, this.loadingConfig)
      this.$on('showToast', this.show)
      prompt.showToast({
        message: hot
      })
      console.log('------', this.loadingConfig.image)
    },
    show (evt) {
      this.isShowLoading = true
      // 更新配置数据
      Object.assign(this.loadingConfig, this.copyConfig, evt.detail || {})
      const self = this
      setTimeout(function(){
        self.isShowLoading = false
      }, this.loadingConfig.duration)
    }
  }
</script>